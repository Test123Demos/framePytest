{"name": "用例的标题: 数据驱动", "status": "failed", "statusDetails": {"message": "AssertionError: assert ('{\"code\": \"200\", \"msg\": '\\n '\"\\\\u8d26\\\\u53f7\\\\u6216\\\\u8005\\\\u5bc6\\\\u7801\\\\u9519\\\\u8bef!\"}\\n') == 'token'\n  - token\n  + {\"code\": \"200\", \"msg\": \"\\u8d26\\u53f7\\u6216\\u8005\\u5bc6\\u7801\\u9519\\u8bef!\"}", "trace": "self = <Testcase_Api.Data_Driven.test_Super.Test_super object at 0x000002552804B430>\ndata = {'mothed': 'post', 'parms': 'json', 'response': 'token', 'token': None, ...}\n\n    @allure.title(\"用例的标题: 数据驱动\")\n    @allure.description(\"用例更详细的描述: 详细描述\")\n    @allure.severity(\"critical\")\n    @allure.epic(\"项目名称: 会所资源管理系统\")\n    @allure.feature(\"资源管理模块\")\n    @allure.story(\"用例的标题: 对会所资源进行增、删、改、查\")\n    @pytest.mark.parametrize(\"data\",read_yaml(\"./Data/login.yaml\"))\n    def test_run(self,data):\n    \n        mothed = mothed_tp(data[\"mothed\"])\n        url=data[\"url\"].lower()\n        parms=parms_tp(data[\"parms\"])\n        value=data[\"value\"]\n        token=data[\"token\"]\n        response=data[\"response\"]\n        logging.info(\"mothed: {}, url: {}, value: {}\".format(mothed, url, value))\n        if mothed and parms :\n            headers={}\n            if token !=None: #判断token不为空需要填写字典值\n                headers.update(token)\n            if parms==\"json\":\n                result=self.session.request(Method=mothed,url=url,json=value,headers=headers)\n            elif parms==\"data\":\n                result=self.session.request(Method=mothed,url=url,data=value,headers=headers)\n            elif parms is None:\n                result=self.session.request(Method=mothed,url=url,headers=headers)\n            logging.info(result.text)\n            if isinstance(response,dict):\n                a_text=self.p.result(list(response.items())[0][0],result.json())\n                rv=list(response.items())[0][1]\n                if a_text is not None:\n                    if isinstance(a_text,int) or isinstance(a_text,str):\n                        assert a_text==rv\n                    else:\n                        assert rv in a_text\n                else:\n                    assert rv==a_text\n    \n            elif response is not None and  not isinstance(response,dict) :\n>               assert result.text==str(response)\nE               assert ('{\"code\": \"200\", \"msg\": '\\n '\"\\\\u8d26\\\\u53f7\\\\u6216\\\\u8005\\\\u5bc6\\\\u7801\\\\u9519\\\\u8bef!\"}\\n') == 'token'\nE                 - token\nE                 + {\"code\": \"200\", \"msg\": \"\\u8d26\\u53f7\\u6216\\u8005\\u5bc6\\u7801\\u9519\\u8bef!\"}\n\nTestcase_Api\\Data_Driven\\test_Super.py:73: AssertionError"}, "description": "用例更详细的描述: 详细描述", "steps": [{"name": "-----发起接口请求-----", "status": "passed", "steps": [{"name": "-----发起post接口请求-----", "status": "passed", "parameters": [{"name": "url", "value": "'http://127.0.0.1:5000/user/signin'"}, {"name": "data", "value": "None"}, {"name": "json", "value": "{'username': 'admin', 'password': '123456'}"}, {"name": "headers", "value": "{}"}], "start": 1670297380338, "stop": 1670297380348}], "attachments": [{"name": "requets.txt", "source": "a456168a-3bd6-4a21-84f6-e3b18b58ff12-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "Method", "value": "'post'"}, {"name": "url", "value": "'http://127.0.0.1:5000/user/signin'"}, {"name": "data", "value": "None"}, {"name": "json", "value": "{'username': 'admin', 'password': '123456'}"}, {"name": "headers", "value": "{}"}], "start": 1670297380337, "stop": 1670297380349}], "attachments": [{"name": "log", "source": "a1f1169a-8c31-4f1c-9dc6-168e44e25b50-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'url': 'http://127.0.0.1:5000/user/signin', 'mothed': 'post', 'token': None, 'parms': 'json', 'value': {'username': 'admin', 'password': '123456'}, 'response': 'token'}"}], "start": 1670297380337, "stop": 1670297380350, "uuid": "48c5cdb3-0226-4b3b-b394-72a9a5e5855e", "historyId": "2b69977d2b6a6b37362672df4d616782", "testCaseId": "fcfa621a7a239df0080a8a85c05d4552", "fullName": "Testcase_Api.Data_Driven.test_Super.Test_super#test_run", "labels": [{"name": "feature", "value": "资源管理模块"}, {"name": "severity", "value": "critical"}, {"name": "story", "value": "用例的标题: 对会所资源进行增、删、改、查"}, {"name": "epic", "value": "项目名称: 会所资源管理系统"}, {"name": "parentSuite", "value": "Testcase_Api.Data_Driven"}, {"name": "suite", "value": "test_Super"}, {"name": "subSuite", "value": "Test_super"}, {"name": "host", "value": "MS-ULWOYCQPHOQZ"}, {"name": "thread", "value": "3908-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase_Api.Data_Driven.test_Super"}]}