[pytest]
#打开pytest自己的日志
log_cli=true
#打印日志的格式
log_format = %(asctime)s %(levelname)s %(message)s
log_date_format = %Y-%m-%d %H:%M:%S
#日志级别
log_level = info
# 日志执行的命令--html=./report.html --clean-alluredir清除报告数据 --last-failed运行上一次识别的用例
addopts = -vs --alluredir=./Report/Api_report --last-failed

#写入文件的日志
log_file=./Log/main.log
#文件写入日志级别
log_file_level = info
#文件写入格式
log_file_format = %(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

#用例搜索的范围
testpaths=./Testcase_Api/Shop


#用例不查找的位置
norecursedirs = .* build dist CVS _darcs {arch} *.egg venv Api Config Log Report Run Untlis

#@pytest.mark.xfail标记预期失败的测试用例，如果执行成功，结果将标记为FAILED，而不再是XPASS了
xfail_strict = true

#控制台输出样式
#classic，经典的 pytest 输出
#progress，类似于经典的 pytest 输出，但带有进度指示器 [ 66%]
#count，类似于 progress ，但将进度显示为已完成的测试数量而不是百分比[2/3]
#console_output_style=progress

#注册器
markers =
    smoke: smoke tests
    function: function tests
    one: test